<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.hotent.makshi.model.receipt.ReceiptAll">
	<resultMap id="ReceiptAll" type="com.hotent.makshi.model.receipt.ReceiptAll">
		<id property="id" column="ID" jdbcType="NUMERIC"/>
		<result property="first_check_personID" column="F_FIRST_CHECK_PERSONID" jdbcType="VARCHAR"/>
		<result property="responsible_personID" column="F_RESPONSIBLE_PERSONID" jdbcType="VARCHAR"/>
		<result property="handle_personID" column="F_HANDLE_PERSONID" jdbcType="VARCHAR"/>
		<result property="receipt_id" column="F_RECEIPT_ID" jdbcType="VARCHAR"/>
		<result property="time" column="F_TIME" jdbcType="VARCHAR"/>
		<result property="title" column="F_TITLE" jdbcType="VARCHAR"/>
		<result property="dispatch_unit" column="F_DISPATCH_UNIT" jdbcType="VARCHAR"/>
		<result property="urgency_degree" column="F_URGENCY_DEGREE" jdbcType="VARCHAR"/>
		<result property="type" column="F_TYPE" jdbcType="VARCHAR"/>
		<result property="time_limit" column="F_TIME_LIMIT" jdbcType="DATE"/>
		<result property="content" column="F_CONTENT" jdbcType="VARCHAR"/>
		<result property="first_check_person" column="F_FIRST_CHECK_PERSON" jdbcType="VARCHAR"/>
		<result property="responsible_person" column="F_RESPONSIBLE_PERSON" jdbcType="VARCHAR"/>
		<result property="handle_person" column="F_HANDLE_PERSON" jdbcType="VARCHAR"/>
		<result property="attachment" column="F_ATTACHMENT" jdbcType="VARCHAR"/>
		<result property="remarks" column="F_REMARKS" jdbcType="VARCHAR"/>
		<result property="state" column="F_STATE" jdbcType="VARCHAR"/>
		<result property="checkState" column="F_CHECK_STATE" jdbcType="VARCHAR"/>
		<result property="sendState" column="F_SEND_STATE" jdbcType="VARCHAR"/>
		<result property="readState" column="F_READ_STATE" jdbcType="VARCHAR"/>
	</resultMap>
	
	<resultMap type="com.hotent.makshi.model.receipt.ReceiptAll" id="ExtReceiptAll" extends="ReceiptAll">
		<id property="taskId" column="TASK_ID" jdbcType="NUMERIC"/>
		<id property="nodeId" column="TASK_DEF_KEY_" jdbcType="VARCHAR"/>
		<id property="nodeName" column="NODE_NAME_" jdbcType="VARCHAR"/>
		<id property="runId" column="FLOW_RUNID" jdbcType="NUMERIC"/>
		<id property="actInstId" column="PROC_INST_ID_" jdbcType="NUMERIC"/>
	</resultMap>

	<sql id="columns">
		ID,F_FIRST_CHECK_PERSONID,F_RESPONSIBLE_PERSONID,F_HANDLE_PERSONID,F_RECEIPT_ID,F_TIME,F_TITLE,F_DISPATCH_UNIT,F_URGENCY_DEGREE,F_TYPE,F_TIME_LIMIT,F_CONTENT,F_FIRST_CHECK_PERSON,F_RESPONSIBLE_PERSON,F_HANDLE_PERSON,F_ATTACHMENT,F_REMARKS,F_STATE,
		F_CHECK_STATE,F_SEND_STATE,F_READ_STATE
	</sql>
	<sql id="wfColumns">
		ID,F_FIRST_CHECK_PERSONID,F_RESPONSIBLE_PERSONID,F_HANDLE_PERSONID,F_RECEIPT_ID,F_TIME,F_TITLE,F_DISPATCH_UNIT,F_URGENCY_DEGREE,F_TYPE,F_TIME_LIMIT,F_CONTENT,F_FIRST_CHECK_PERSON,F_RESPONSIBLE_PERSON,F_HANDLE_PERSON,F_ATTACHMENT,F_REMARKS,F_STATE
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(first_check_personID)"> AND F_FIRST_CHECK_PERSONID  LIKE '%${first_check_personID}%'  </if>
			<if test="@Ognl@isNotEmpty(responsible_personID)"> AND F_RESPONSIBLE_PERSONID  LIKE '%${responsible_personID}%'  </if>
			<if test="@Ognl@isNotEmpty(handle_personID)"> AND F_HANDLE_PERSONID  LIKE '%${handle_personID}%'  </if>
			<if test="@Ognl@isNotEmpty(receipt_id)"> AND F_RECEIPT_ID  LIKE '%${receipt_id}%'  </if>
			<if test="@Ognl@isNotEmpty(time)"> AND F_TIME  LIKE '%${time}%'  </if>
			<if test="@Ognl@isNotEmpty(title)"> AND F_TITLE  LIKE '%${title}%'  </if>
			<if test="@Ognl@isNotEmpty(dispatch_unit)"> AND F_DISPATCH_UNIT  LIKE '%${dispatch_unit}%'  </if>
			<if test="@Ognl@isNotEmpty(urgency_degree)"> AND F_URGENCY_DEGREE  LIKE '%${urgency_degree}%'  </if>
			<if test="@Ognl@isNotEmpty(type)"> AND F_TYPE  LIKE '%${type}%'  </if>
			<if test="@Ognl@isNotEmpty(time_limit)"> AND F_TIME_LIMIT  =#{time_limit} </if>
			<if test="@Ognl@isNotEmpty(begintime_limit)"> AND F_TIME_LIMIT  >=#{begintime_limit,jdbcType=DATE} </if>
			<if test="@Ognl@isNotEmpty(endtime_limit)"> AND F_TIME_LIMIT <![CDATA[ <=#{endtime_limit,jdbcType=DATE}]]> </if>
			<if test="@Ognl@isNotEmpty(content)"> AND F_CONTENT  LIKE '%${content}%'  </if>
			<if test="@Ognl@isNotEmpty(first_check_person)"> AND F_FIRST_CHECK_PERSON  LIKE '%${first_check_person}%'  </if>
			<if test="@Ognl@isNotEmpty(responsible_person)"> AND F_RESPONSIBLE_PERSON  LIKE '%${responsible_person}%'  </if>
			<if test="@Ognl@isNotEmpty(handle_person)"> AND F_HANDLE_PERSON  LIKE '%${handle_person}%'  </if>
			<if test="@Ognl@isNotEmpty(attachment)"> AND F_ATTACHMENT  LIKE '%${attachment}%'  </if>
			<if test="@Ognl@isNotEmpty(remarks)"> AND F_REMARKS  LIKE '%${remarks}%'  </if>
			<if test="@Ognl@isNotEmpty(state)">      AND F_STATE  LIKE '%${state}%'  </if>
			<if test="@Ognl@isNotEmpty(checkState)"> AND F_CHECK_STATE  LIKE '%${checkState}%'</if>
			<if test="@Ognl@isNotEmpty(sendState)">  AND F_CHECK_STATE = 1 AND F_SEND_STATE  LIKE '%${sendState}%'</if>
			<if test="@Ognl@isNotEmpty(readState)">  AND F_READ_STATE = ${readState} </if>
			<if test="@Ognl@isNotEmpty(ids)">   	   AND ID IN ${ids} </if>
		</where>
	</sql>

	<insert id="add" parameterType="com.hotent.makshi.model.receipt.ReceiptAll">
		INSERT INTO W_RECEIPT_ALL
		(ID,
		F_FIRST_CHECK_PERSONID,F_RESPONSIBLE_PERSONID,F_HANDLE_PERSONID,F_RECEIPT_ID,F_TIME,F_TITLE,F_DISPATCH_UNIT,F_URGENCY_DEGREE,F_TYPE,F_TIME_LIMIT,F_CONTENT,F_FIRST_CHECK_PERSON,F_RESPONSIBLE_PERSON,F_HANDLE_PERSON,F_ATTACHMENT,F_REMARKS,F_STATE)
		VALUES
		(#{id,jdbcType=NUMERIC},
		#{first_check_personID,jdbcType=VARCHAR}, #{responsible_personID,jdbcType=VARCHAR}, #{handle_personID,jdbcType=VARCHAR}, #{receipt_id,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{dispatch_unit,jdbcType=VARCHAR}, #{urgency_degree,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{time_limit,jdbcType=DATE}, #{content,jdbcType=VARCHAR}, #{first_check_person,jdbcType=VARCHAR}, #{responsible_person,jdbcType=VARCHAR}, #{handle_person,jdbcType=VARCHAR}, #{attachment,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM W_RECEIPT_ALL 
		WHERE
		ID=#{id}
	</delete>
	
	<update id="update" parameterType="com.hotent.makshi.model.receipt.ReceiptAll">
		UPDATE W_RECEIPT_ALL SET
		F_FIRST_CHECK_PERSONID=#{first_check_personID,jdbcType=VARCHAR},
		F_RESPONSIBLE_PERSONID=#{responsible_personID,jdbcType=VARCHAR},
		F_HANDLE_PERSONID=#{handle_personID,jdbcType=VARCHAR},
		F_RECEIPT_ID=#{receipt_id,jdbcType=VARCHAR},
		F_TIME=#{time,jdbcType=VARCHAR},
		F_TITLE=#{title,jdbcType=VARCHAR},
		F_DISPATCH_UNIT=#{dispatch_unit,jdbcType=VARCHAR},
		F_URGENCY_DEGREE=#{urgency_degree,jdbcType=VARCHAR},
		F_TYPE=#{type,jdbcType=VARCHAR},
		<if test="@Ognl@isNotEmpty(time_limit)">F_TIME_LIMIT=#{time_limit,jdbcType=DATE},</if>
		
		F_CONTENT=#{content,jdbcType=VARCHAR},
		F_FIRST_CHECK_PERSON=#{first_check_person,jdbcType=VARCHAR},
		F_RESPONSIBLE_PERSON=#{responsible_person,jdbcType=VARCHAR},
		F_HANDLE_PERSON=#{handle_person,jdbcType=VARCHAR},
		F_ATTACHMENT=#{attachment,jdbcType=VARCHAR},
		F_REMARKS=#{remarks,jdbcType=VARCHAR},
		F_STATE=#{state,jdbcType=VARCHAR}
		WHERE
		ID=#{id}
	</update>
	<update id="updateReadState" parameterType="java.lang.Long">
		UPDATE W_RECEIPT_ALL SET
		F_READ_STATE = 1
		WHERE ID = #{id}
	</update>
		    
	<select id="getById" parameterType="java.lang.Long" resultMap="ReceiptAll">
		SELECT <include refid="columns"/>
		FROM W_RECEIPT_ALL
		WHERE
		ID=#{id}
	</select>
	
	<select id="getAll" resultMap="ReceiptAll">
		SELECT <include refid="columns"/>
		FROM W_RECEIPT_ALL 
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by ID  desc
		</if>
	</select>
	
	<select id="getCheckList" resultMap="ReceiptAll">
		SELECT <include refid="columns"/>
		FROM W_RECEIPT_ALL 
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by ID  desc
		</if>
	</select>
	
	<select id="getSendList" resultMap="ReceiptAll">
		SELECT <include refid="columns"/>
		FROM W_RECEIPT_ALL WHERE F_CHECK_STATE = 1
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by ID  desc
		</if>
	</select>
	<select id="getDraftByUser" resultMap="ReceiptAll">
		SELECT <include refid="wfColumns"/>  ,B.runId
		FROM W_RECEIPT_ALL A,BPM_PRO_RUN B
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.STATUS=4
		and B.CREATORID=#{userId}
		order by B.CREATETIME DESC
	</select>
	
	
	<select id="getMyTodoTask" resultMap="ExtReceiptAll">
		SELECT * FROM (
		SELECT <include refid="wfColumns"/> ,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_RECEIPT_ALL A,BPM_PRO_RUN B ,
		ACT_RU_TASK C
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ AND C.ASSIGNEE_=#{userId}
		
		union
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_RECEIPT_ALL A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ AND D.USER_ID_ = #{userId}
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		
		UNION
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_RECEIPT_ALL A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ 
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		AND D.type_ = 'org' and D.group_id_ in (select uo.orgid from SYS_USER_POS uo  where uo.userid= #{userId} )
		
		UNION
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_RECEIPT_ALL A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ 
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		AND D.type_ = 'role' and D.group_id_ in (select ur.roleid from sys_user_role ur where ur.userid=#{userId} )
		
		union 
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_RECEIPT_ALL A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ 
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		AND D.type_ = 'pos' and D.group_id_ in (select up.posid from sys_user_pos up where up.userid= #{userId} )
		
		) tmp
		
		<where>
			<if test="@Ognl@isNotEmpty(subject)"> AND upper(tmp.subject) LIKE #{subject}   </if>
			<if test="@Ognl@isNotEmpty(processName)"> AND upper(tmp.processName) LIKE #{processName} </if>
			<if test="@Ognl@isNotEmpty(creatorId)">AND tmp.creatorId =#{creatorId} </if>
			<if test="@Ognl@isNotEmpty(beginCreateTime)">and tmp.TASK_CREATE_TIME_>=#{beginCreateTime,jdbcType=TIMESTAMP}</if>
			<if test="@Ognl@isNotEmpty(endCreateTime)">and tmp.TASK_CREATE_TIME_ &lt;=#{endCreateTime,jdbcType=TIMESTAMP}</if>
			<if test="@Ognl@isNotEmpty(type)">
				AND tmp.description_ = #{type}
			</if>	
			
		</where>
		<if test="@Ognl@isEmpty(orderField)">
			order by tmp.TASK_CREATE_TIME_ desc
		</if>
		<if test="@Ognl@isNotEmpty(orderField)">
			order by ${orderField} ${orderSeq}
		</if>
	</select>
	
	
	<select id="getEndByUser" resultMap="ReceiptAll">
		SELECT <include refid="wfColumns"/>  ,B.runId
		FROM W_RECEIPT_ALL A,BPM_PRO_RUN_HIS B
		WHERE A.ID=B.BUSINESSKEY_NUM 
		and B.CREATORID=#{userId} and B.STATUS=2
		order by B.ENDTIME DESC
	</select>
	
</mapper>
