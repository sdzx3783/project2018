<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.hotent.makshi.model.abandonment.AssetAbandonment">
	<resultMap id="AssetAbandonment" type="com.hotent.makshi.model.abandonment.AssetAbandonment">
		<id property="id" column="ID" jdbcType="NUMERIC"/>
		<result property="use_nameID" column="F_USE_NAMEID" jdbcType="VARCHAR"/>
		<result property="application_name" column="F_APPLICATION_NAME" jdbcType="VARCHAR"/>
		<result property="department" column="F_department" jdbcType="VARCHAR"/>
		<result property="use_name" column="F_USE_NAME" jdbcType="VARCHAR"/>
		<result property="asset_id" column="F_ASSET_ID" jdbcType="VARCHAR"/>
		<result property="standard" column="F_STANDARD" jdbcType="VARCHAR"/>
		<result property="asset_name" column="F_ASSET_NAME" jdbcType="VARCHAR"/>
		<result property="get_type" column="F_GET_TYPE" jdbcType="VARCHAR"/>
		<result property="specification" column="F_SPECIFICATION" jdbcType="VARCHAR"/>
		<result property="buy_date" column="F_BUY_DATE" jdbcType="DATE"/>
		<result property="number" column="F_NUMBER" jdbcType="NUMERIC"/>
		<result property="reason" column="F_REASON" jdbcType="VARCHAR"/>
		<result property="account" column="F_account" jdbcType="VARCHAR"/>
		<result property="attachment" column="F_attachment" jdbcType="VARCHAR"/>
	</resultMap>
	
	<resultMap type="com.hotent.makshi.model.abandonment.AssetAbandonment" id="ExtAssetAbandonment" extends="AssetAbandonment">
		<id property="taskId" column="TASK_ID" jdbcType="NUMERIC"/>
		<id property="nodeId" column="TASK_DEF_KEY_" jdbcType="VARCHAR"/>
		<id property="nodeName" column="NODE_NAME_" jdbcType="VARCHAR"/>
		<id property="runId" column="FLOW_RUNID" jdbcType="NUMERIC"/>
		<id property="actInstId" column="PROC_INST_ID_" jdbcType="NUMERIC"/>
	</resultMap>

	<sql id="columns">
		ID,
		F_USE_NAMEID,
		F_APPLICATION_NAME,
		F_USE_NAME,
		F_ASSET_ID,
		F_STANDARD,
		F_ASSET_NAME,
		F_GET_TYPE,
		F_SPECIFICATION,
		F_BUY_DATE,
		F_NUMBER,
		F_REASON,
		F_account,
		F_attachment,
		F_department
	</sql>
	<sql id="wfColumns">
		ID,
		F_USE_NAMEID,
		F_APPLICATION_NAME,
		F_USE_NAME,
		F_ASSET_ID,
		F_STANDARD,
		F_ASSET_NAME,
		F_GET_TYPE,
		F_SPECIFICATION,
		F_BUY_DATE,
		F_NUMBER,
		F_REASON
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(use_nameID)"> AND F_USE_NAMEID  LIKE '%${use_nameID}%'  </if>
			<if test="@Ognl@isNotEmpty(application_name)"> AND F_APPLICATION_NAME  LIKE '%${application_name}%'  </if>
			<if test="@Ognl@isNotEmpty(first_department)"> AND F_FIRST_DEPARTMENT  LIKE '%${first_department}%'  </if>
			<if test="@Ognl@isNotEmpty(use_name)"> AND F_USE_NAME  LIKE '%${use_name}%'  </if>
			<if test="@Ognl@isNotEmpty(second_department)"> AND F_SECOND_DEPARTMENT  LIKE '%${second_department}%'  </if>
			<if test="@Ognl@isNotEmpty(asset_id)"> AND F_ASSET_ID  LIKE '%${asset_id}%'  </if>
			<if test="@Ognl@isNotEmpty(standard)"> AND F_STANDARD  LIKE '%${standard}%'  </if>
			<if test="@Ognl@isNotEmpty(asset_name)"> AND F_ASSET_NAME  LIKE '%${asset_name}%'  </if>
			<if test="@Ognl@isNotEmpty(get_type)"> AND F_GET_TYPE  LIKE '%${get_type}%'  </if>
			<if test="@Ognl@isNotEmpty(specification)"> AND F_SPECIFICATION  LIKE '%${specification}%'  </if>
			<if test="@Ognl@isNotEmpty(buy_date)"> AND F_BUY_DATE  =#{buy_date} </if>
			<if test="@Ognl@isNotEmpty(beginbuy_date)"> AND F_BUY_DATE  >=#{beginbuy_date,jdbcType=DATE} </if>
			<if test="@Ognl@isNotEmpty(endbuy_date)"> AND F_BUY_DATE <![CDATA[ <=#{endbuy_date,jdbcType=DATE}]]> </if>
			<if test="@Ognl@isNotEmpty(number)"> AND F_NUMBER  =#{number} </if>
			<if test="@Ognl@isNotEmpty(reason)"> AND F_REASON  LIKE '%${reason}%'  </if>
			<if test="@Ognl@isNotEmpty(state)"> AND F_STATE  LIKE '%${state}%'  </if>
			<if test="@Ognl@isNotEmpty(globalflowno)"> AND F_GLOBALFLOWNO  LIKE '%${globalflowno}%'  </if>
			<if test="@Ognl@isNotEmpty(application_time_end)"> AND F_APPLICATION_TIME  <![CDATA[ <=#{application_time_end,jdbcType=DATE}]]> </if>
			<if test="@Ognl@isNotEmpty(application_time_begin)"> AND F_APPLICATION_TIME  >=#{application_time_begin,jdbcType=DATE}  </if>
		</where>
	</sql>

	<insert id="add" parameterType="com.hotent.makshi.model.abandonment.AssetAbandonment">
		INSERT INTO W_ASSET_ABANDONMENT
		(ID,
		F_USE_NAMEID,
		F_second_department,
		F_account,
		F_department,
		F_departmentID,
		F_APPLICATION_NAME,
		F_USE_NAME,
		F_use_nameID,
		F_ASSET_ID,
		F_STANDARD,
		F_ASSET_NAME,
		F_GET_TYPE,
		F_SPECIFICATION,
		F_BUY_DATE,
		F_NUMBER,
		F_attachment,
		F_REASON)
		VALUES
		 (#{id,jdbcType=NUMERIC},
		  #{use_nameID,jdbcType=VARCHAR},
		  #{second_department,jdbcType=VARCHAR}, 
		  #{account,jdbcType=VARCHAR}, 
		  #{department,jdbcType=VARCHAR},
		  #{departmentID,jdbcType=VARCHAR},
		  #{application_name,jdbcType=VARCHAR}, 
		  #{use_name,jdbcType=VARCHAR}, 
	      #{use_nameID,jdbcType=VARCHAR},
		  #{asset_id,jdbcType=VARCHAR}, 
		  #{standard,jdbcType=VARCHAR}, 
		  #{asset_name,jdbcType=VARCHAR}, 
		  #{get_type,jdbcType=VARCHAR}, 
		  #{specification,jdbcType=VARCHAR}, 
		  #{buy_date,jdbcType=DATE}, 
		  #{number,jdbcType=NUMERIC}, 
		  #{reason,jdbcType=VARCHAR}
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM W_ASSET_ABANDONMENT 
		WHERE
		ID=#{id}
	</delete>
	
	
	<select id="getById" parameterType="java.lang.Long" resultMap="AssetAbandonment">
		SELECT  <include refid="columns"/>
		FROM W_ASSET_ABANDONMENT
		WHERE
		ID=#{id}
	</select>
	
	<select id="getAll" resultMap="AssetAbandonment">
		select * from (
			SELECT <include refid="columns"/>
			FROM W_ASSET_ABANDONMENT  w
			LEFT JOIN  BPM_PRO_RUN_HIS g ON g.BUSINESSKEY = w.ID
			AND g.parentId = 0  
			<if test="@Ognl@isNotEmpty(orderField)">
			order by ${orderField} ${orderSeq}
			</if>
			<if test="@Ognl@isEmpty(orderField)">
			order by ID  desc
			</if>
		) s
		<include refid="dynamicWhere" />
	</select>
	
	
	
	<select id="getDraftByUser" resultMap="AssetAbandonment">
		SELECT <include refid="wfColumns"/>  ,B.runId
		FROM W_ASSET_ABANDONMENT A,BPM_PRO_RUN B
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.STATUS=4
		and B.CREATORID=#{userId}
		order by B.CREATETIME DESC
	</select>
	
	
	<select id="getMyTodoTask" resultMap="ExtAssetAbandonment">
		SELECT * FROM (
		SELECT <include refid="wfColumns"/> ,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_ASSET_ABANDONMENT A,BPM_PRO_RUN B ,
		ACT_RU_TASK C
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ AND C.ASSIGNEE_=#{userId}
		
		union
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_ASSET_ABANDONMENT A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ AND D.USER_ID_ = #{userId}
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		
		UNION
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_ASSET_ABANDONMENT A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ 
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		AND D.type_ = 'org' and D.group_id_ in (select uo.orgid from SYS_USER_POS uo  where uo.userid= #{userId} )
		
		UNION
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_ASSET_ABANDONMENT A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ 
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		AND D.type_ = 'role' and D.group_id_ in (select ur.roleid from sys_user_role ur where ur.userid=#{userId} )
		
		union 
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_ASSET_ABANDONMENT A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ 
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		AND D.type_ = 'pos' and D.group_id_ in (select up.posid from sys_user_pos up where up.userid= #{userId} )
		
		) tmp
		
		<where>
			<if test="@Ognl@isNotEmpty(subject)"> AND upper(tmp.subject) LIKE #{subject}   </if>
			<if test="@Ognl@isNotEmpty(processName)"> AND upper(tmp.processName) LIKE #{processName} </if>
			<if test="@Ognl@isNotEmpty(creatorId)">AND tmp.creatorId =#{creatorId} </if>
			<if test="@Ognl@isNotEmpty(beginCreateTime)">and tmp.TASK_CREATE_TIME_>=#{beginCreateTime,jdbcType=TIMESTAMP}</if>
			<if test="@Ognl@isNotEmpty(endCreateTime)">and tmp.TASK_CREATE_TIME_ &lt;=#{endCreateTime,jdbcType=TIMESTAMP}</if>
			<if test="@Ognl@isNotEmpty(type)">
				AND tmp.description_ = #{type}
			</if>	
			
		</where>
		<if test="@Ognl@isEmpty(orderField)">
			order by tmp.TASK_CREATE_TIME_ desc
		</if>
		<if test="@Ognl@isNotEmpty(orderField)">
			order by ${orderField} ${orderSeq}
		</if>
	</select>
	
	
	<select id="getEndByUser" resultMap="AssetAbandonment">
		SELECT <include refid="wfColumns"/>  ,B.runId
		FROM W_ASSET_ABANDONMENT A,BPM_PRO_RUN_HIS B
		WHERE A.ID=B.BUSINESSKEY_NUM 
		and B.CREATORID=#{userId} and B.STATUS=2
		order by B.ENDTIME DESC
	</select>
	
</mapper>
