<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.hotent.makshi.model.project.ClassifyStageTask" >
  <resultMap id="BaseResultMap" type="com.hotent.makshi.model.project.ClassifyStageTask" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="classifyStageId" property="classifystageid" jdbcType="BIGINT" />
    <result column="taskNo" property="taskno" jdbcType="INTEGER" />
    <result column="taskName" property="taskname" jdbcType="VARCHAR" />
    <result column="templateFile" property="templatefile" jdbcType="VARCHAR" />
    <result column="taskType" property="tasktype" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="isExamine" property="isexamine" jdbcType="BIT" />
    <result column="isMore" property="ismore" jdbcType="BIT" />
    <result column="order" property="order" jdbcType="INTEGER" />
    <result column="fields" property="fields" jdbcType="VARCHAR" />
    <result column="uploadFile" property="uploadfile" jdbcType="VARCHAR" />
    <result column="flowId" property="flowid" jdbcType="VARCHAR" />
    <result column="preClassifyStageTaskId" property="preclassifystagetaskid" jdbcType="VARCHAR" />
    <result column="afterClassifyStageTaskId" property="afterclassifystagetaskid" jdbcType="VARCHAR" />
    <result column="queryClassifyStageTaskId" property="queryclassifystagetaskid" jdbcType="VARCHAR" />
    <result column="isDelete" property="isdelete" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, classifyStageId, taskNo, taskName, templateFile, taskType, remark, isExamine, 
    isMore, `order`, `fields`, uploadFile, flowId, preClassifyStageTaskId, afterClassifyStageTaskId, queryClassifyStageTaskId,
    isDelete
  </sql>
  <sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(classifystageid)"> AND classifyStageId  =#{classifystageid} </if>
			 AND isDelete  =0 
		</where>
  </sql>
  <select id="getAll" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List"/>
		from w_classify_stage_task 
		<include refid="dynamicWhere" />
		
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by id  desc
		</if>
	</select>
  
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from w_classify_stage_task
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="getNodesOfstageTaskContainId" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from w_classify_stage_task
    where  isDelete  =0  and
    FIND_IN_SET(#{containedId,jdbcType=INTEGER},
    <if test="preclassifystagetaskid != null" >
       preClassifyStageTaskId
    </if>
    <if test="afterclassifystagetaskid != null" >
       afterClassifyStageTaskId
    </if>
    <if test="queryclassifystagetaskid != null" >
       queryClassifyStageTaskId
    </if>
    )
   
  </select>
  
  <select id="getByStageId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from w_classify_stage_task
    where classifyStageId  =#{classifystageid,jdbcType=BIGINT}
    <if test="isdelete != null" >
       and isDelete = #{isdelete,jdbcType=INTEGER}
    </if>
    <if test="orderField!=null">
  		order by ${orderField} ${orderSeq}
  	</if>
	<if test="orderField==null">
		order by id 
	</if>
	<if test="pageStart != null and pageStart > -1 and pageSize != null and pageSize > -1">
		limit ${pageStart}, ${pageSize}
	</if>
  </select>
  
  <select id="getTaskCountByStageId" resultType="long">
    select  count(*)
    from w_classify_stage_task
    where classifyStageId  =#{classifystageid,jdbcType=BIGINT}
    <if test="isdelete != null" >
       and isDelete = #{isdelete,jdbcType=INTEGER}
    </if>
  </select>
  
  
  <select id="getTaskCountByClassifyId" resultType="long" >
    SELECT count(*) from 
    w_classify_stage_task wt 
    	INNER JOIN w_classify_stage ws on wt.classifyStageId=ws.id and ws.isDelete=0
		INNER JOIN w_classify_library wc on ws.classifyLibraryId=wc.id 
		where wt.isDelete=0 and wc.id=#{classifylibraryid,jdbcType=BIGINT}
  </select>
  <delete id="delById" parameterType="java.lang.Integer" >
     update  w_classify_stage_task set isDelete=1
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <delete id="delByStageId">
    update  w_classify_stage_task set isDelete=1
    where classifyStageId  =#{classifystageid,jdbcType=BIGINT}
  </delete>
  
  <insert id="add" parameterType="com.hotent.makshi.model.project.ClassifyStageTask" useGeneratedKeys="true" keyProperty="id" >
    insert into w_classify_stage_task (classifyStageId, taskNo, taskName, 
      templateFile, taskType, remark, 
      isExamine, isMore, `order`, `fields`, 
      uploadFile, flowId, preClassifyStageTaskId, 
      afterClassifyStageTaskId, queryClassifyStageTaskId, isDelete)
    values (#{classifystageid,jdbcType=BIGINT}, #{taskno,jdbcType=INTEGER}, #{taskname,jdbcType=VARCHAR}, 
      #{templatefile,jdbcType=VARCHAR}, #{tasktype,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{isexamine,jdbcType=BIT}, #{ismore,jdbcType=BIT}, #{order,jdbcType=INTEGER}, #{fields,jdbcType=VARCHAR}, 
      #{uploadfile,jdbcType=VARCHAR}, #{flowid,jdbcType=VARCHAR}, #{preclassifystagetaskid,jdbcType=VARCHAR}, 
      #{afterclassifystagetaskid,jdbcType=VARCHAR},  #{queryclassifystagetaskid,jdbcType=VARCHAR}, #{isdelete,jdbcType=INTEGER})
  </insert>
  
  <update id="update" parameterType="com.hotent.makshi.model.project.ClassifyStageTask" >
    update w_classify_stage_task
    <set >
      <if test="classifystageid != null" >
        classifyStageId = #{classifystageid,jdbcType=BIGINT},
      </if>
      <if test="taskno != null" >
        taskNo = #{taskno,jdbcType=INTEGER},
      </if>
      <if test="taskname != null" >
        taskName = #{taskname,jdbcType=VARCHAR},
      </if>
      <if test="templatefile != null" >
        templateFile = #{templatefile,jdbcType=VARCHAR},
      </if>
      <if test="tasktype != null" >
        taskType = #{tasktype,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isexamine != null" >
        isExamine = #{isexamine,jdbcType=BIT},
      </if>
      <if test="ismore != null" >
        isMore = #{ismore,jdbcType=BIT},
      </if>
      <if test="order != null" >
        `order` = #{order,jdbcType=INTEGER},
      </if>
      <if test="fields != null" >
        `fields` = #{fields,jdbcType=VARCHAR},
      </if>
      <if test="uploadfile != null" >
        uploadFile = #{uploadfile,jdbcType=VARCHAR},
      </if>
      <if test="flowid != null" >
        flowId = #{flowid,jdbcType=VARCHAR},
      </if>
      <if test="preclassifystagetaskid != null" >
        preClassifyStageTaskId = #{preclassifystagetaskid,jdbcType=VARCHAR},
      </if>
      <if test="afterclassifystagetaskid != null" >
        afterClassifyStageTaskId = #{afterclassifystagetaskid,jdbcType=VARCHAR},
      </if>
      <if test="queryclassifystagetaskid != null" >
        queryClassifyStageTaskId = #{queryclassifystagetaskid,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null" >
        isDelete = #{isdelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>