<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.hotent.makshi.model.title.CertificateBorrow">
	<resultMap id="CertificateBorrow" type="com.hotent.makshi.model.title.CertificateBorrow">
		<id property="id" column="ID" jdbcType="NUMERIC"/>
		<result property="fullnameID" column="F_FULLNAMEID" jdbcType="VARCHAR"/>
		<result property="fullname" column="F_FULLNAME" jdbcType="VARCHAR"/>
		<result property="steal_name" column="F_STEAL_NAME" jdbcType="VARCHAR"/>
		<result property="ap_date" column="F_AP_DATE" jdbcType="DATE"/>
		<result property="type" column="F_TYPE" jdbcType="VARCHAR"/>
		<result property="return_date_expect" column="F_RETURN_DATE_EXPECT" jdbcType="DATE"/>
		<result property="user_id" column="F_USER_ID" jdbcType="VARCHAR"/>
		<result property="gh" column="F_GH" jdbcType="VARCHAR"/>
		<result property="effictiveDate" column="F_EFFICTIVEDATE" jdbcType="DATE"/>
		<result property="return_date" column="F_RETURN_DATE" jdbcType="DATE"/>
		<result property="borrow_date" column="F_BORROW_DATE" jdbcType="DATE"/>
		<result property="remark" column="F_REMARK" jdbcType="VARCHAR"/>
		<result property="borrow_data_num" column="F_BORROW_DATA_NUM" jdbcType="VARCHAR"/>
		<result property="applicant" column="F_APPLICANT" jdbcType="VARCHAR"/>
		<result property="applicantID" column="applicantId" jdbcType="VARCHAR"/>
		<result property="finish" column="FINISH" jdbcType="INTEGER"/>
		<result property="attachment" column="F_attachment" jdbcType="VARCHAR"/>
	</resultMap>
	
	<resultMap type="com.hotent.makshi.model.title.CertificateBorrow" id="ExtCertificateBorrow" extends="CertificateBorrow">
		<id property="taskId" column="TASK_ID" jdbcType="NUMERIC"/>
		<id property="nodeId" column="TASK_DEF_KEY_" jdbcType="VARCHAR"/>
		<id property="nodeName" column="NODE_NAME_" jdbcType="VARCHAR"/>
		<id property="runId" column="FLOW_RUNID" jdbcType="NUMERIC"/>
		<id property="actInstId" column="PROC_INST_ID_" jdbcType="NUMERIC"/>
	</resultMap>

	<sql id="columns">
		ID,FINISH,F_FULLNAMEID,F_FULLNAME,F_STEAL_NAME,F_AP_DATE,F_TYPE,F_RETURN_DATE_EXPECT,F_USER_ID, F_USER_ID applicantId,F_GH,F_EFFICTIVEDATE,F_RETURN_DATE,F_BORROW_DATE,F_REMARK,F_BORROW_DATA_NUM,F_APPLICANT,F_attachment
	</sql>
	<sql id="wfColumns">
		ID,FINISH,F_FULLNAMEID,F_FULLNAME,F_STEAL_NAME,F_AP_DATE,F_TYPE,F_RETURN_DATE_EXPECT,F_USER_ID, F_USER_ID applicantId,F_GH,F_EFFICTIVEDATE,F_RETURN_DATE,F_BORROW_DATE,F_REMARK,F_BORROW_DATA_NUM,F_APPLICANT,F_attachment
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			 DELETED = 0 
			 and (b.status is null OR b.status not in(7,10,11))
			<if test="@Ognl@isNotEmpty(applicantID)"> AND F_USER_ID  = #{applicantID} </if>
			<if test="@Ognl@isNotEmpty(fullnameID)"> AND F_FULLNAMEID  LIKE '%${fullnameID}%'  </if>
			<if test="@Ognl@isNotEmpty(fullname)"> AND F_FULLNAME  LIKE '%${fullname}%'  </if>
			<if test="@Ognl@isNotEmpty(steal_name)"> AND F_STEAL_NAME  LIKE '%${steal_name}%'  </if>
			<if test="@Ognl@isNotEmpty(ap_date)"> AND F_AP_DATE  =#{ap_date} </if>
			<if test="@Ognl@isNotEmpty(beginap_date)"> AND F_AP_DATE  >=#{beginap_date,jdbcType=DATE} </if>
			<if test="@Ognl@isNotEmpty(endap_date)"> AND F_AP_DATE <![CDATA[ <=#{endap_date,jdbcType=DATE}]]> </if>
			<if test="@Ognl@isNotEmpty(type)"> AND F_TYPE  LIKE '%${type}%'  </if>
			<if test="@Ognl@isNotEmpty(return_date_expect)"> AND F_RETURN_DATE_EXPECT  =#{return_date_expect} </if>
			<if test="@Ognl@isNotEmpty(beginreturn_date_expect)"> AND F_RETURN_DATE_EXPECT  >=#{beginreturn_date_expect,jdbcType=DATE} </if>
			<if test="@Ognl@isNotEmpty(endreturn_date_expect)"> AND F_RETURN_DATE_EXPECT <![CDATA[ <=#{endreturn_date_expect,jdbcType=DATE}]]> </if>
			<if test="@Ognl@isNotEmpty(user_id)"> AND F_USER_ID  LIKE '%${user_id}%'  </if>
			<if test="@Ognl@isNotEmpty(gh)"> AND F_GH  LIKE '%${gh}%'  </if>
			<if test="@Ognl@isNotEmpty(effictiveDate)"> AND F_EFFICTIVEDATE  =#{effictiveDate} </if>
			<if test="@Ognl@isNotEmpty(begineffictiveDate)"> AND F_EFFICTIVEDATE  >=#{begineffictiveDate,jdbcType=DATE} </if>
			<if test="@Ognl@isNotEmpty(endeffictiveDate)"> AND F_EFFICTIVEDATE <![CDATA[ <=#{endeffictiveDate,jdbcType=DATE}]]> </if>
			<if test="@Ognl@isNotEmpty(return_date)"> AND F_RETURN_DATE  =#{return_date} </if>
			<if test="@Ognl@isNotEmpty(beginreturn_date)"> AND F_RETURN_DATE  >=#{beginreturn_date,jdbcType=DATE} </if>
			<if test="@Ognl@isNotEmpty(endreturn_date)"> AND F_RETURN_DATE <![CDATA[ <=#{endreturn_date,jdbcType=DATE}]]> </if>
			<if test="@Ognl@isNotEmpty(borrow_date)"> AND F_BORROW_DATE  =#{borrow_date} </if>
			<if test="@Ognl@isNotEmpty(beginborrow_date)"> AND F_BORROW_DATE  >=#{beginborrow_date,jdbcType=DATE} </if>
			<if test="@Ognl@isNotEmpty(endborrow_date)"> AND F_BORROW_DATE <![CDATA[ <=#{endborrow_date,jdbcType=DATE}]]> </if>
			<if test="@Ognl@isNotEmpty(remark)"> AND F_REMARK  LIKE '%${remark}%'  </if>
			<if test="@Ognl@isNotEmpty(borrow_data_num)"> AND F_BORROW_DATA_NUM  LIKE '%${borrow_data_num}%'  </if>
			<if test="@Ognl@isNotEmpty(applicant)"> AND F_APPLICANT  LIKE '%${applicant}%'  </if>
		</where>
	</sql>

	<insert id="add" parameterType="com.hotent.makshi.model.title.CertificateBorrow">
		INSERT INTO W_CERTIFICATE_BORROW
		(ID,FINISH,
		F_FULLNAMEID,F_FULLNAME,F_STEAL_NAME,F_AP_DATE,F_TYPE,F_RETURN_DATE_EXPECT,F_USER_ID,F_GH,F_EFFICTIVEDATE,F_RETURN_DATE,F_BORROW_DATE,F_REMARK,F_BORROW_DATA_NUM,F_APPLICANT,F_attachment)
		VALUES
		(#{id,jdbcType=NUMERIC},#{finish,jdbcType=INTEGER},
		#{fullnameID,jdbcType=VARCHAR}, #{fullname,jdbcType=VARCHAR}, #{steal_name,jdbcType=VARCHAR}, #{ap_date,jdbcType=DATE}, #{type,jdbcType=VARCHAR}, #{return_date_expect,jdbcType=DATE}, #{user_id,jdbcType=VARCHAR}, #{gh,jdbcType=VARCHAR}, #{effictiveDate,jdbcType=DATE}, #{return_date,jdbcType=DATE}, #{borrow_date,jdbcType=DATE},
	    #{remark,jdbcType=VARCHAR},#{borrow_data_num,jdbcType=VARCHAR}, #{applicant,jdbcType=VARCHAR}, #{attachment,jdbcType=VARCHAR})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		UPDATE  W_CERTIFICATE_BORROW SET
		DELETED =1
		WHERE
		ID=#{id} 
	</delete>
	
	<update id="update" parameterType="com.hotent.makshi.model.title.CertificateBorrow">
		UPDATE W_CERTIFICATE_BORROW SET
		F_FULLNAMEID=#{fullnameID,jdbcType=VARCHAR},
		F_FULLNAME=#{fullname,jdbcType=VARCHAR},
		F_STEAL_NAME=#{steal_name,jdbcType=VARCHAR},
		F_AP_DATE=#{ap_date,jdbcType=DATE},
		F_TYPE=#{type,jdbcType=VARCHAR},
		F_RETURN_DATE_EXPECT=#{return_date_expect,jdbcType=DATE},
		F_USER_ID=#{user_id,jdbcType=VARCHAR},
		F_GH=#{gh,jdbcType=VARCHAR},
		F_EFFICTIVEDATE=#{effictiveDate,jdbcType=DATE},
		F_RETURN_DATE=#{return_date,jdbcType=DATE},
		F_BORROW_DATE=#{borrow_date,jdbcType=DATE},
		F_REMARK=#{remark,jdbcType=VARCHAR},
		F_BORROW_DATA_NUM=#{borrow_data_num,jdbcType=VARCHAR},
		F_APPLICANT=#{applicant,jdbcType=VARCHAR},
		FINISH = #{finish,jdbcType=INTEGER},
		F_attachment=#{attachment,jdbcType=VARCHAR}
		WHERE
		ID=#{id}
	</update>
	
		    
	<select id="getById" parameterType="java.lang.Long" resultMap="CertificateBorrow">
		SELECT <include refid="columns"/>
		FROM W_CERTIFICATE_BORROW
		WHERE
		ID=#{id} 
	</select>
	
	<select id="getAll" resultMap="CertificateBorrow">
		SELECT <include refid="columns"/>
		FROM W_CERTIFICATE_BORROW a  LEFT JOIN bpm_pro_run_his b ON a.id = b.businesskey 
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by ID  desc
		</if>
	</select>
	
	<select id="getMyCertificateBorrow" resultMap="CertificateBorrow">
		SELECT <include refid="columns"/>
		FROM W_CERTIFICATE_BORROW
		WHERE
		DELETED = 0 
		AND F_USER_ID=#{userId} 
		ORDER BY F_ap_date DESC
	</select>
	
	<select id="getDraftByUser" parameterType="java.lang.Long" resultMap="CertificateBorrow">
		SELECT <include refid="wfColumns"/>  ,B.runId
		FROM W_CERTIFICATE_BORROW A,BPM_PRO_RUN B
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.STATUS=4
		and B.CREATORID=#{userId}
		order by B.CREATETIME DESC
	</select>
	
	
	<select id="getMyTodoTask" resultMap="ExtCertificateBorrow">
		SELECT * FROM (
		SELECT <include refid="wfColumns"/> ,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_CERTIFICATE_BORROW A,BPM_PRO_RUN B ,
		ACT_RU_TASK C
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ AND C.ASSIGNEE_=#{userId}
		
		union
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_CERTIFICATE_BORROW A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ AND D.USER_ID_ = #{userId}
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		
		UNION
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_CERTIFICATE_BORROW A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ 
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		AND D.type_ = 'org' and D.group_id_ in (select uo.orgid from SYS_USER_POS uo  where uo.userid= #{userId} )
		
		UNION
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_CERTIFICATE_BORROW A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ 
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		AND D.type_ = 'role' and D.group_id_ in (select ur.roleid from sys_user_role ur where ur.userid=#{userId} )
		
		union 
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_CERTIFICATE_BORROW A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ 
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		AND D.type_ = 'pos' and D.group_id_ in (select up.posid from sys_user_pos up where up.userid= #{userId} )
		
		) tmp
		
		<where>
			<if test="@Ognl@isNotEmpty(subject)"> AND upper(tmp.subject) LIKE #{subject}   </if>
			<if test="@Ognl@isNotEmpty(processName)"> AND upper(tmp.processName) LIKE #{processName} </if>
			<if test="@Ognl@isNotEmpty(creatorId)">AND tmp.creatorId =#{creatorId} </if>
			<if test="@Ognl@isNotEmpty(beginCreateTime)">and tmp.TASK_CREATE_TIME_>=#{beginCreateTime,jdbcType=TIMESTAMP}</if>
			<if test="@Ognl@isNotEmpty(endCreateTime)">and tmp.TASK_CREATE_TIME_ &lt;=#{endCreateTime,jdbcType=TIMESTAMP}</if>
			<if test="@Ognl@isNotEmpty(type)">
				AND tmp.description_ = #{type}
			</if>	
			
		</where>
		<if test="@Ognl@isEmpty(orderField)">
			order by tmp.TASK_CREATE_TIME_ desc
		</if>
		<if test="@Ognl@isNotEmpty(orderField)">
			order by ${orderField} ${orderSeq}
		</if>
	</select>
	
	
	<select id="getEndByUser" resultMap="CertificateBorrow">
		SELECT <include refid="wfColumns"/>  ,B.runId
		FROM W_CERTIFICATE_BORROW A,BPM_PRO_RUN_HIS B
		WHERE A.ID=B.BUSINESSKEY_NUM 
		and B.CREATORID=#{userId} and B.STATUS=2
		order by B.ENDTIME DESC
	</select>
	
</mapper>
