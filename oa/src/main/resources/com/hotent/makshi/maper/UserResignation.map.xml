<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.hotent.makshi.model.hr.UserResignation">
	<resultMap id="UserResignation" type="com.hotent.makshi.model.hr.UserResignation">
		<id property="id" column="ID" jdbcType="NUMERIC"/>
		<result property="user_name" column="F_USER_NAME" jdbcType="VARCHAR"/>
		<result property="department" column="F_DEPARTMENT" jdbcType="VARCHAR"/>
		<result property="user_id" column="F_USER_ID" jdbcType="VARCHAR"/>
		<result property="user_new_phone_number" column="F_USER_NEW_PHONE_NUMBER" jdbcType="VARCHAR"/>
		<result property="entrydate_time" column="F_ENTRYDATE_TIME" jdbcType="VARCHAR"/>
		<result property="terminame_time" column="F_TERMINAME_TIME" jdbcType="VARCHAR"/>
		<result property="reason" column="F_REASON" jdbcType="CLOB"/>
		<result property="department_transfer_status" column="F_DEPARTMENT_TRANSFER_STATUS" jdbcType="VARCHAR"/>
		<result property="date_status" column="F_DATE_STATUS" jdbcType="VARCHAR"/>
		<result property="stamp_transfer_status" column="F_STAMP_TRANSFER_STATUS" jdbcType="VARCHAR"/>
		<result property="artical_transfer_status" column="F_ARTICAL_TRANSFER_STATUS" jdbcType="VARCHAR"/>
		<result property="resignation_reason" column="F_RESIGNATION_REASON" jdbcType="CLOB"/>
	</resultMap>
	
	<resultMap type="com.hotent.makshi.model.hr.UserResignation" id="ExtUserResignation" extends="UserResignation">
		<id property="nodeId" column="TASK_DEF_KEY_" jdbcType="VARCHAR"/>
		<id property="nodeName" column="NODE_NAME_" jdbcType="VARCHAR"/>
		<id property="runId" column="FLOW_RUNID" jdbcType="NUMERIC"/>
		<id property="actInstId" column="PROC_INST_ID_" jdbcType="NUMERIC"/>
	</resultMap>

	<sql id="columns">
		ID,F_USER_NAME,F_DEPARTMENT,F_USER_ID,F_USER_NEW_PHONE_NUMBER,F_ENTRYDATE_TIME,F_TERMINAME_TIME,F_REASON,F_DEPARTMENT_TRANSFER_STATUS,F_DATE_STATUS,F_STAMP_TRANSFER_STATUS,F_ARTICAL_TRANSFER_STATUS,F_RESIGNATION_REASON
	</sql>
	<sql id="wfColumns">
		ID,F_USER_NAME,F_DEPARTMENT,F_USER_ID,F_USER_NEW_PHONE_NUMBER,F_ENTRYDATE_TIME,F_TERMINAME_TIME,F_REASON,F_DEPARTMENT_TRANSFER_STATUS,F_DATE_STATUS,F_STAMP_TRANSFER_STATUS,F_ARTICAL_TRANSFER_STATUS,F_RESIGNATION_REASON
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(user_name)"> AND F_USER_NAME  LIKE '%${user_name}%'  </if>
			<if test="@Ognl@isNotEmpty(department)"> AND F_DEPARTMENT  LIKE '%${department}%'  </if>
			<if test="@Ognl@isNotEmpty(user_id)"> AND F_USER_ID  LIKE '%${user_id}%'  </if>
			<if test="@Ognl@isNotEmpty(user_new_phone_number)"> AND F_USER_NEW_PHONE_NUMBER  LIKE '%${user_new_phone_number}%'  </if>
			<if test="@Ognl@isNotEmpty(entrydate_time)"> AND F_ENTRYDATE_TIME  LIKE '%${entrydate_time}%'  </if>
			<if test="@Ognl@isNotEmpty(terminame_time)"> AND F_TERMINAME_TIME  LIKE '%${terminame_time}%'  </if>
			<if test="@Ognl@isNotEmpty(reason)"> AND F_REASON  =#{reason} </if>
			<if test="@Ognl@isNotEmpty(department_transfer_status)"> AND F_DEPARTMENT_TRANSFER_STATUS  LIKE '%${department_transfer_status}%'  </if>
			<if test="@Ognl@isNotEmpty(date_status)"> AND F_DATE_STATUS  LIKE '%${date_status}%'  </if>
			<if test="@Ognl@isNotEmpty(stamp_transfer_status)"> AND F_STAMP_TRANSFER_STATUS  LIKE '%${stamp_transfer_status}%'  </if>
			<if test="@Ognl@isNotEmpty(artical_transfer_status)"> AND F_ARTICAL_TRANSFER_STATUS  LIKE '%${artical_transfer_status}%'  </if>
			<if test="@Ognl@isNotEmpty(resignation_reason)"> AND F_RESIGNATION_REASON  =#{resignation_reason} </if>
			<if test="@Ognl@isNotEmpty(globalflowno)"> AND b.GLOBALFLOWNO  LIKE #{globalflowno}  </if>
			<if test="@Ognl@isNotEmpty(creator)"> AND b.CREATOR  LIKE '%${creator}%'  </if>
		</where>
	</sql>

	<insert id="add" parameterType="com.hotent.makshi.model.hr.UserResignation">
		INSERT INTO W_USER_RESIGNATION
		(ID,
		F_USER_NAME,F_DEPARTMENT,F_USER_ID,F_USER_NEW_PHONE_NUMBER,F_ENTRYDATE_TIME,F_TERMINAME_TIME,F_REASON,F_DEPARTMENT_TRANSFER_STATUS,F_DATE_STATUS,F_STAMP_TRANSFER_STATUS,F_ARTICAL_TRANSFER_STATUS,F_RESIGNATION_REASON)
		VALUES
		(#{id,jdbcType=NUMERIC},
		#{user_name,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, #{user_id,jdbcType=VARCHAR}, #{user_new_phone_number,jdbcType=VARCHAR}, #{entrydate_time,jdbcType=VARCHAR}, #{terminame_time,jdbcType=VARCHAR}, #{reason,jdbcType=CLOB}, #{department_transfer_status,jdbcType=VARCHAR}, #{date_status,jdbcType=VARCHAR}, #{stamp_transfer_status,jdbcType=VARCHAR}, #{artical_transfer_status,jdbcType=VARCHAR}, #{resignation_reason,jdbcType=CLOB})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM W_USER_RESIGNATION 
		WHERE
		ID=#{id}
	</delete>
	
	<update id="update" parameterType="com.hotent.makshi.model.hr.UserResignation">
		UPDATE W_USER_RESIGNATION SET
		F_USER_NAME=#{user_name,jdbcType=VARCHAR},
		F_DEPARTMENT=#{department,jdbcType=VARCHAR},
		F_USER_ID=#{user_id,jdbcType=VARCHAR},
		F_USER_NEW_PHONE_NUMBER=#{user_new_phone_number,jdbcType=VARCHAR},
		F_ENTRYDATE_TIME=#{entrydate_time,jdbcType=VARCHAR},
		F_TERMINAME_TIME=#{terminame_time,jdbcType=VARCHAR},
		F_REASON=#{reason,jdbcType=CLOB},
		F_DEPARTMENT_TRANSFER_STATUS=#{department_transfer_status,jdbcType=VARCHAR},
		F_DATE_STATUS=#{date_status,jdbcType=VARCHAR},
		F_STAMP_TRANSFER_STATUS=#{stamp_transfer_status,jdbcType=VARCHAR},
		F_ARTICAL_TRANSFER_STATUS=#{artical_transfer_status,jdbcType=VARCHAR},
		F_RESIGNATION_REASON=#{resignation_reason,jdbcType=CLOB}
		WHERE
		ID=#{id}
	</update>
	
		    
	<select id="getById" parameterType="java.lang.Long" resultMap="UserResignation">
		SELECT <include refid="columns"/>
		FROM W_USER_RESIGNATION
		WHERE
		ID=#{id}
	</select>
	
	<select id="getAll" resultMap="UserResignation">
		SELECT <include refid="columns"/>
		FROM W_USER_RESIGNATION    a   
		left join bpm_pro_run_his b on a.id=b.BUSINESSKEY
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by ID  desc
		</if>
	</select>
	
	
	
	<select id="getDraftByUser" resultMap="UserResignation">
		SELECT <include refid="wfColumns"/>  ,B.runId
		FROM W_USER_RESIGNATION A,BPM_PRO_RUN B
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.STATUS=4
		and B.CREATORID=#{userId}
		order by B.CREATETIME DESC
	</select>
	
	
	<select id="getMyTodoTask" resultMap="ExtUserResignation">
		SELECT * FROM (
		SELECT <include refid="wfColumns"/> ,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_USER_RESIGNATION A,BPM_PRO_RUN B ,
		ACT_RU_TASK C
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ AND C.ASSIGNEE_=#{userId}
		
		union
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_USER_RESIGNATION A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ AND D.USER_ID_ = #{userId}
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		
		UNION
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_USER_RESIGNATION A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ 
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		AND D.type_ = 'org' and D.group_id_ in (select uo.orgid from SYS_USER_POS uo  where uo.userid= #{userId} )
		
		UNION
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_USER_RESIGNATION A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ 
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		AND D.type_ = 'role' and D.group_id_ in (select ur.roleid from sys_user_role ur where ur.userid=#{userId} )
		
		union 
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_USER_RESIGNATION A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ 
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		AND D.type_ = 'pos' and D.group_id_ in (select up.posid from sys_user_pos up where up.userid= #{userId} )
		
		) tmp
		
		<where>
			<if test="@Ognl@isNotEmpty(subject)"> AND upper(tmp.subject) LIKE #{subject}   </if>
			<if test="@Ognl@isNotEmpty(processName)"> AND upper(tmp.processName) LIKE #{processName} </if>
			<if test="@Ognl@isNotEmpty(creatorId)">AND tmp.creatorId =#{creatorId} </if>
			<if test="@Ognl@isNotEmpty(beginCreateTime)">and tmp.TASK_CREATE_TIME_>=#{beginCreateTime,jdbcType=TIMESTAMP}</if>
			<if test="@Ognl@isNotEmpty(endCreateTime)">and tmp.TASK_CREATE_TIME_ &lt;=#{endCreateTime,jdbcType=TIMESTAMP}</if>
			<if test="@Ognl@isNotEmpty(type)">
				AND tmp.description_ = #{type}
			</if>	
			
		</where>
		<if test="@Ognl@isEmpty(orderField)">
			order by tmp.TASK_CREATE_TIME_ desc
		</if>
		<if test="@Ognl@isNotEmpty(orderField)">
			order by ${orderField} ${orderSeq}
		</if>
	</select>
	
	
	<select id="getEndByUser" resultMap="UserResignation">
		SELECT <include refid="wfColumns"/>  ,B.runId
		FROM W_USER_RESIGNATION A,BPM_PRO_RUN_HIS B
		WHERE A.ID=B.BUSINESSKEY_NUM 
		and B.CREATORID=#{userId} and B.STATUS=2
		order by B.ENDTIME DESC
	</select>
	
</mapper>
