<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.hotent.makshi.model.river.HdDocumentReview">
	<resultMap id="HdDocumentReview" type="com.hotent.makshi.model.river.HdDocumentReview">
		<id property="id" column="ID" jdbcType="NUMERIC"/>
		<result property="departmentID" column="F_DEPARTMENTID" jdbcType="VARCHAR"/>
		<result property="applicantID" column="F_APPLICANTID" jdbcType="VARCHAR"/>
		<result property="project_leaderID" column="F_PROJECT_LEADERID" jdbcType="VARCHAR"/>
		<result property="department_headsID" column="F_DEPARTMENT_HEADSID" jdbcType="VARCHAR"/>
		<result property="finalCheckerID" column="F_FINALCHECKERID" jdbcType="VARCHAR"/>
		<result property="file_name" column="F_FILE_NAME" jdbcType="VARCHAR"/>
		<result property="number" column="F_NUMBER" jdbcType="VARCHAR"/>
		<result property="department" column="F_DEPARTMENT" jdbcType="VARCHAR"/>
		<result property="applicant" column="F_APPLICANT" jdbcType="VARCHAR"/>
		<result property="date" column="F_DATE" jdbcType="DATE"/>
		<result property="type" column="F_TYPE" jdbcType="VARCHAR"/>
		<result property="level" column="F_LEVEL" jdbcType="VARCHAR"/>
		<result property="content" column="F_CONTENT" jdbcType="VARCHAR"/>
		<result property="opinion" column="F_OPINION" jdbcType="VARCHAR"/>
		<result property="attachment" column="F_ATTACHMENT" jdbcType="VARCHAR"/>
		<result property="project_leader" column="F_PROJECT_LEADER" jdbcType="VARCHAR"/>
		<result property="department_heads" column="F_DEPARTMENT_HEADS" jdbcType="VARCHAR"/>
		<result property="isNeedCheck" column="F_ISNEEDCHECK" jdbcType="VARCHAR"/>
		<result property="finalChecker" column="F_FINALCHECKER" jdbcType="VARCHAR"/>
	</resultMap>
	
	<resultMap type="com.hotent.makshi.model.river.HdDocumentReview" id="ExtHdDocumentReview" extends="HdDocumentReview">
		<id property="taskId" column="TASK_ID" jdbcType="NUMERIC"/>
		<id property="nodeId" column="TASK_DEF_KEY_" jdbcType="VARCHAR"/>
		<id property="nodeName" column="NODE_NAME_" jdbcType="VARCHAR"/>
		<id property="runId" column="FLOW_RUNID" jdbcType="NUMERIC"/>
		<id property="actInstId" column="PROC_INST_ID_" jdbcType="NUMERIC"/>
	</resultMap>

	<sql id="columns">
		ID,F_DEPARTMENTID,F_APPLICANTID,F_PROJECT_LEADERID,F_DEPARTMENT_HEADSID,F_FINALCHECKERID,F_FILE_NAME,F_NUMBER,F_DEPARTMENT,F_APPLICANT,F_DATE,F_TYPE,F_LEVEL,F_CONTENT,F_OPINION,F_ATTACHMENT,F_PROJECT_LEADER,F_DEPARTMENT_HEADS,F_ISNEEDCHECK,F_FINALCHECKER
	</sql>
	<sql id="wfColumns">
		ID,F_DEPARTMENTID,F_APPLICANTID,F_PROJECT_LEADERID,F_DEPARTMENT_HEADSID,F_FINALCHECKERID,F_FILE_NAME,F_NUMBER,F_DEPARTMENT,F_APPLICANT,F_DATE,F_TYPE,F_LEVEL,F_CONTENT,F_OPINION,F_ATTACHMENT,F_PROJECT_LEADER,F_DEPARTMENT_HEADS,F_ISNEEDCHECK,F_FINALCHECKER
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(departmentID)"> AND F_DEPARTMENTID  LIKE '%${departmentID}%'  </if>
			<if test="@Ognl@isNotEmpty(applicantID)"> AND F_APPLICANTID  LIKE '%${applicantID}%'  </if>
			<if test="@Ognl@isNotEmpty(project_leaderID)"> AND F_PROJECT_LEADERID  LIKE '%${project_leaderID}%'  </if>
			<if test="@Ognl@isNotEmpty(department_headsID)"> AND F_DEPARTMENT_HEADSID  LIKE '%${department_headsID}%'  </if>
			<if test="@Ognl@isNotEmpty(finalCheckerID)"> AND F_FINALCHECKERID  LIKE '%${finalCheckerID}%'  </if>
			<if test="@Ognl@isNotEmpty(file_name)"> AND F_FILE_NAME  LIKE '%${file_name}%'  </if>
			<if test="@Ognl@isNotEmpty(number)"> AND F_NUMBER  LIKE '%${number}%'  </if>
			<if test="@Ognl@isNotEmpty(department)"> AND F_DEPARTMENT  LIKE '%${department}%'  </if>
			<if test="@Ognl@isNotEmpty(applicant)"> AND F_APPLICANT  LIKE '%${applicant}%'  </if>
			<if test="@Ognl@isNotEmpty(date)"> AND F_DATE  =#{date} </if>
			<if test="@Ognl@isNotEmpty(begindate)"> AND F_DATE  >=#{begindate,jdbcType=DATE} </if>
			<if test="@Ognl@isNotEmpty(enddate)"> AND F_DATE <![CDATA[ <=#{enddate,jdbcType=DATE}]]> </if>
			<if test="@Ognl@isNotEmpty(type)"> AND F_TYPE  LIKE '%${type}%'  </if>
			<if test="@Ognl@isNotEmpty(level)"> AND F_LEVEL  LIKE '%${level}%'  </if>
			<if test="@Ognl@isNotEmpty(content)"> AND F_CONTENT  LIKE '%${content}%'  </if>
			<if test="@Ognl@isNotEmpty(opinion)"> AND F_OPINION  LIKE '%${opinion}%'  </if>
			<if test="@Ognl@isNotEmpty(attachment)"> AND F_ATTACHMENT  LIKE '%${attachment}%'  </if>
			<if test="@Ognl@isNotEmpty(project_leader)"> AND F_PROJECT_LEADER  LIKE '%${project_leader}%'  </if>
			<if test="@Ognl@isNotEmpty(department_heads)"> AND F_DEPARTMENT_HEADS  LIKE '%${department_heads}%'  </if>
			<if test="@Ognl@isNotEmpty(isNeedCheck)"> AND F_ISNEEDCHECK  LIKE '%${isNeedCheck}%'  </if>
			<if test="@Ognl@isNotEmpty(finalChecker)"> AND F_FINALCHECKER  LIKE '%${finalChecker}%'  </if>
		          and F_finish=1
		</where>
	</sql>

	<insert id="add" parameterType="com.hotent.makshi.model.river.HdDocumentReview">
		INSERT INTO W_HD_DOCUMENT_REVIEW
		(ID,
		F_DEPARTMENTID,F_APPLICANTID,F_PROJECT_LEADERID,F_DEPARTMENT_HEADSID,F_FINALCHECKERID,F_FILE_NAME,F_NUMBER,F_DEPARTMENT,F_APPLICANT,F_DATE,F_TYPE,F_LEVEL,F_CONTENT,F_OPINION,F_ATTACHMENT,F_PROJECT_LEADER,F_DEPARTMENT_HEADS,F_ISNEEDCHECK,F_FINALCHECKER)
		VALUES
		(#{id,jdbcType=NUMERIC},
		#{departmentID,jdbcType=VARCHAR}, #{applicantID,jdbcType=VARCHAR}, #{project_leaderID,jdbcType=VARCHAR}, #{department_headsID,jdbcType=VARCHAR}, #{finalCheckerID,jdbcType=VARCHAR}, #{file_name,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, #{applicant,jdbcType=VARCHAR}, #{date,jdbcType=DATE}, #{type,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{opinion,jdbcType=VARCHAR}, #{attachment,jdbcType=VARCHAR}, #{project_leader,jdbcType=VARCHAR}, #{department_heads,jdbcType=VARCHAR}, #{isNeedCheck,jdbcType=VARCHAR}, #{finalChecker,jdbcType=VARCHAR})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM W_HD_DOCUMENT_REVIEW 
		WHERE
		ID=#{id}
	</delete>
	
	<update id="update" parameterType="com.hotent.makshi.model.river.HdDocumentReview">
		UPDATE W_HD_DOCUMENT_REVIEW SET
		F_DEPARTMENTID=#{departmentID,jdbcType=VARCHAR},
		F_APPLICANTID=#{applicantID,jdbcType=VARCHAR},
		F_PROJECT_LEADERID=#{project_leaderID,jdbcType=VARCHAR},
		F_DEPARTMENT_HEADSID=#{department_headsID,jdbcType=VARCHAR},
		F_FINALCHECKERID=#{finalCheckerID,jdbcType=VARCHAR},
		F_FILE_NAME=#{file_name,jdbcType=VARCHAR},
		F_NUMBER=#{number,jdbcType=VARCHAR},
		F_DEPARTMENT=#{department,jdbcType=VARCHAR},
		F_APPLICANT=#{applicant,jdbcType=VARCHAR},
		F_DATE=#{date,jdbcType=DATE},
		F_TYPE=#{type,jdbcType=VARCHAR},
		F_LEVEL=#{level,jdbcType=VARCHAR},
		F_CONTENT=#{content,jdbcType=VARCHAR},
		F_OPINION=#{opinion,jdbcType=VARCHAR},
		F_ATTACHMENT=#{attachment,jdbcType=VARCHAR},
		F_PROJECT_LEADER=#{project_leader,jdbcType=VARCHAR},
		F_DEPARTMENT_HEADS=#{department_heads,jdbcType=VARCHAR},
		F_ISNEEDCHECK=#{isNeedCheck,jdbcType=VARCHAR},
		F_FINALCHECKER=#{finalChecker,jdbcType=VARCHAR}
		WHERE
		ID=#{id}
	</update>
	
		    
	<select id="getById" parameterType="java.lang.Long" resultMap="HdDocumentReview">
		SELECT <include refid="columns"/>
		FROM W_HD_DOCUMENT_REVIEW
		WHERE
		ID=#{id}
	</select>
	
	<select id="getAll" resultMap="HdDocumentReview">
		SELECT <include refid="columns"/>
		FROM W_HD_DOCUMENT_REVIEW   
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by ID  desc
		</if>
	</select>
	
	
	
	<select id="getDraftByUser" resultMap="HdDocumentReview">
		SELECT <include refid="wfColumns"/>  ,B.runId
		FROM W_HD_DOCUMENT_REVIEW A,BPM_PRO_RUN B
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.STATUS=4
		and B.CREATORID=#{userId}
		order by B.CREATETIME DESC
	</select>
	
	
	<select id="getMyTodoTask" resultMap="ExtHdDocumentReview">
		SELECT * FROM (
		SELECT <include refid="wfColumns"/> ,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_HD_DOCUMENT_REVIEW A,BPM_PRO_RUN B ,
		ACT_RU_TASK C
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ AND C.ASSIGNEE_=#{userId}
		
		union
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_HD_DOCUMENT_REVIEW A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ AND D.USER_ID_ = #{userId}
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		
		UNION
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_HD_DOCUMENT_REVIEW A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ 
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		AND D.type_ = 'org' and D.group_id_ in (select uo.orgid from SYS_USER_POS uo  where uo.userid= #{userId} )
		
		UNION
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_HD_DOCUMENT_REVIEW A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ 
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		AND D.type_ = 'role' and D.group_id_ in (select ur.roleid from sys_user_role ur where ur.userid=#{userId} )
		
		union 
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_HD_DOCUMENT_REVIEW A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ 
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		AND D.type_ = 'pos' and D.group_id_ in (select up.posid from sys_user_pos up where up.userid= #{userId} )
		
		) tmp
		
		<where>
			<if test="@Ognl@isNotEmpty(subject)"> AND upper(tmp.subject) LIKE #{subject}   </if>
			<if test="@Ognl@isNotEmpty(processName)"> AND upper(tmp.processName) LIKE #{processName} </if>
			<if test="@Ognl@isNotEmpty(creatorId)">AND tmp.creatorId =#{creatorId} </if>
			<if test="@Ognl@isNotEmpty(beginCreateTime)">and tmp.TASK_CREATE_TIME_>=#{beginCreateTime,jdbcType=TIMESTAMP}</if>
			<if test="@Ognl@isNotEmpty(endCreateTime)">and tmp.TASK_CREATE_TIME_ &lt;=#{endCreateTime,jdbcType=TIMESTAMP}</if>
			<if test="@Ognl@isNotEmpty(type)">
				AND tmp.description_ = #{type}
			</if>	
			
		</where>
		<if test="@Ognl@isEmpty(orderField)">
			order by tmp.TASK_CREATE_TIME_ desc
		</if>
		<if test="@Ognl@isNotEmpty(orderField)">
			order by ${orderField} ${orderSeq}
		</if>
	</select>
	
	
	<select id="getEndByUser" resultMap="HdDocumentReview">
		SELECT <include refid="wfColumns"/>  ,B.runId
		FROM W_HD_DOCUMENT_REVIEW A,BPM_PRO_RUN_HIS B
		WHERE A.ID=B.BUSINESSKEY_NUM 
		and B.CREATORID=#{userId} and B.STATUS=2
		order by B.ENDTIME DESC
	</select>
	
</mapper>
