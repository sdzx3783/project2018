<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.hotent.makshi.model.contract.ContractCancelApplication">
	<resultMap id="ContractCancelApplication" type="com.hotent.makshi.model.contract.ContractCancelApplication">
		<id property="id" column="ID" jdbcType="NUMERIC"/>
		<result property="contract_num" column="F_CONTRACT_NUM" jdbcType="VARCHAR"/>
		<result property="contract_name" column="F_CONTRACT_NAME" jdbcType="VARCHAR"/>
		<result property="first_party" column="F_FIRST_PARTY" jdbcType="VARCHAR"/>
		<result property="singing_time" column="F_SINGING_TIME" jdbcType="DATE"/>
		<result property="contract_department" column="F_CONTRACT_DEPARTMENT" jdbcType="VARCHAR"/>
		<result property="contract_departmentID" column="F_CONTRACT_DEPARTMENTID" jdbcType="VARCHAR"/>
		<result property="project_director" column="F_project_director" jdbcType="VARCHAR"/>
		<result property="project_directorID" column="F_project_directorID" jdbcType="VARCHAR"/>
		<result property="total_investment" column="F_TOTAL_INVESTMENT" jdbcType="VARCHAR"/>
		<result property="handle_person" column="F_handle_person" jdbcType="VARCHAR"/>
		<result property="handle_personID" column="F_handle_personID" jdbcType="VARCHAR"/>
		<result property="responsible_person" column="F_responsible_person" jdbcType="VARCHAR"/>
		<result property="responsible_personID" column="F_responsible_personID" jdbcType="VARCHAR"/>
		<result property="account" column="F_account" jdbcType="VARCHAR"/>
		<result property="cancel_reason" column="F_CANCEL_REASON" jdbcType="VARCHAR"/>
	</resultMap>
	
	<resultMap type="com.hotent.makshi.model.contract.ContractCancelApplication" id="ExtContractCancelApplication" extends="ContractCancelApplication">
		<id property="taskId" column="TASK_ID" jdbcType="NUMERIC"/>
		<id property="nodeId" column="TASK_DEF_KEY_" jdbcType="VARCHAR"/>
		<id property="nodeName" column="NODE_NAME_" jdbcType="VARCHAR"/>
		<id property="runId" column="FLOW_RUNID" jdbcType="NUMERIC"/>
		<id property="actInstId" column="PROC_INST_ID_" jdbcType="NUMERIC"/>
	</resultMap>

	<sql id="columns">
		ID,F_CONTRACT_DEPARTMENTID,F_CONTRACT_NUM,F_CONTRACT_DEPARTMENT,F_CONTRACT_NAME,F_PROJECT_DIRECTOR,F_FIRST_PARTY,F_TOTAL_INVESTMENT,F_SINGING_TIME,F_CANCEL_REASON
		,F_project_directorID,
		F_handle_person,
		F_handle_personID,
		F_responsible_person,
		F_responsible_personID,
		F_account
	</sql>
	<sql id="wfColumns">
		ID,F_CONTRACT_DEPARTMENTID,F_CONTRACT_NUM,F_CONTRACT_DEPARTMENT,F_CONTRACT_NAME,F_PROJECT_DIRECTOR,F_FIRST_PARTY,F_TOTAL_INVESTMENT,F_SINGING_TIME,F_CANCEL_REASON
		,F_project_directorID,
		F_handle_person,
		F_handle_personID,
		F_responsible_person,
		F_responsible_personID,
		F_account
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(contract_departmentID)"> AND F_CONTRACT_DEPARTMENTID  LIKE '%${contract_departmentID}%'  </if>
			<if test="@Ognl@isNotEmpty(contract_num)"> AND F_CONTRACT_NUM  LIKE '%${contract_num}%'  </if>
			<if test="@Ognl@isNotEmpty(contract_department)"> AND F_CONTRACT_DEPARTMENT  LIKE '%${contract_department}%'  </if>
			<if test="@Ognl@isNotEmpty(contract_name)"> AND F_CONTRACT_NAME  LIKE '%${contract_name}%'  </if>
			<if test="@Ognl@isNotEmpty(project_director)"> AND F_PROJECT_DIRECTOR  LIKE '%${project_director}%'  </if>
			<if test="@Ognl@isNotEmpty(first_party)"> AND F_FIRST_PARTY  LIKE '%${first_party}%'  </if>
			<if test="@Ognl@isNotEmpty(total_investment)"> AND F_TOTAL_INVESTMENT  LIKE '%${total_investment}%'  </if>
			<if test="@Ognl@isNotEmpty(singing_time)"> AND F_SINGING_TIME  =#{singing_time} </if>
			<if test="@Ognl@isNotEmpty(beginsinging_time)"> AND F_SINGING_TIME  >=#{beginsinging_time,jdbcType=DATE} </if>
			<if test="@Ognl@isNotEmpty(endsinging_time)"> AND F_SINGING_TIME <![CDATA[ <=#{endsinging_time,jdbcType=DATE}]]> </if>
			<if test="@Ognl@isNotEmpty(cancel_reason)"> AND F_CANCEL_REASON  LIKE '%${cancel_reason}%'  </if>
			<if test="@Ognl@isNotEmpty(globalflowno)"> AND b.GLOBALFLOWNO  LIKE #{globalflowno}  </if>
			<if test="@Ognl@isNotEmpty(creator)"> AND b.CREATOR  LIKE '%${creator}%'  </if>
		</where>
	</sql>

	<insert id="add" parameterType="com.hotent.makshi.model.contract.ContractCancelApplication">
		INSERT INTO W_CONTRACT_CANCEL_APPLICATION
		(ID,
		F_CONTRACT_DEPARTMENTID,F_CONTRACT_NUM,F_CONTRACT_DEPARTMENT,F_CONTRACT_NAME,F_PROJECT_DIRECTOR,F_FIRST_PARTY,F_TOTAL_INVESTMENT,F_SINGING_TIME,F_CANCEL_REASON
		,F_project_directorID,
		F_handle_person,
		F_handle_personID,
		F_responsible_person,
		F_responsible_personID,
		F_account)
		VALUES
		(#{id,jdbcType=NUMERIC},
		#{contract_departmentID,jdbcType=VARCHAR}, #{contract_num,jdbcType=VARCHAR}, #{contract_department,jdbcType=VARCHAR}, #{contract_name,jdbcType=VARCHAR}, #{project_director,jdbcType=VARCHAR}, #{first_party,jdbcType=VARCHAR}, #{total_investment,jdbcType=VARCHAR}, #{singing_time,jdbcType=DATE}, #{cancel_reason,jdbcType=VARCHAR}
		, #{project_directorID,jdbcType=VARCHAR},
		#{handle_person,jdbcType=VARCHAR},
		#{handle_personID,jdbcType=VARCHAR},
		#{responsible_person,jdbcType=VARCHAR},
		#{responsible_personID,jdbcType=VARCHAR},
		#{account,jdbcType=VARCHAR},
		)
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM W_CONTRACT_CANCEL_APPLICATION 
		WHERE
		ID=#{id}
	</delete>
	
	<update id="update" parameterType="com.hotent.makshi.model.contract.ContractCancelApplication">
		UPDATE W_CONTRACT_CANCEL_APPLICATION SET
		F_CONTRACT_DEPARTMENTID=#{contract_departmentID,jdbcType=VARCHAR},
		F_CONTRACT_NUM=#{contract_num,jdbcType=VARCHAR},
		F_CONTRACT_DEPARTMENT=#{contract_department,jdbcType=VARCHAR},
		F_CONTRACT_NAME=#{contract_name,jdbcType=VARCHAR},
		F_PROJECT_DIRECTOR=#{project_director,jdbcType=VARCHAR},
		F_FIRST_PARTY=#{first_party,jdbcType=VARCHAR},
		F_TOTAL_INVESTMENT=#{total_investment,jdbcType=VARCHAR},
		F_SINGING_TIME=#{singing_time,jdbcType=DATE},
		F_CANCEL_REASON=#{cancel_reason,jdbcType=VARCHAR},
		F_project_directorID=#{project_directorID,jdbcType=VARCHAR},
		F_handle_person=#{handle_person,jdbcType=VARCHAR},
		F_handle_personID=#{handle_personID,jdbcType=VARCHAR},
		F_responsible_person=#{responsible_person,jdbcType=VARCHAR},
		F_responsible_personID=#{responsible_personID,jdbcType=VARCHAR},
		F_account=#{account,jdbcType=VARCHAR}
		WHERE
		ID=#{id}
	</update>
	
		    
	<select id="getById" parameterType="java.lang.Long" resultMap="ContractCancelApplication">
		SELECT <include refid="columns"/>
		FROM W_CONTRACT_CANCEL_APPLICATION
		WHERE
		ID=#{id}
	</select>
	
	<select id="getAll" resultMap="ContractCancelApplication">
		SELECT <include refid="columns"/>
		FROM W_CONTRACT_CANCEL_APPLICATION    a   
		left join bpm_pro_run_his b on a.id=b.BUSINESSKEY
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by ID  desc
		</if>
	</select>
	
	
	
	<select id="getDraftByUser" resultMap="ContractCancelApplication">
		SELECT <include refid="wfColumns"/>  ,B.runId
		FROM W_CONTRACT_CANCEL_APPLICATION A,BPM_PRO_RUN B
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.STATUS=4
		and B.CREATORID=#{userId}
		order by B.CREATETIME DESC
	</select>
	
	
	<select id="getMyTodoTask" resultMap="ExtContractCancelApplication">
		SELECT * FROM (
		SELECT <include refid="wfColumns"/> ,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_CONTRACT_CANCEL_APPLICATION A,BPM_PRO_RUN B ,
		ACT_RU_TASK C
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ AND C.ASSIGNEE_=#{userId}
		
		union
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_CONTRACT_CANCEL_APPLICATION A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ AND D.USER_ID_ = #{userId}
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		
		UNION
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_CONTRACT_CANCEL_APPLICATION A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ 
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		AND D.type_ = 'org' and D.group_id_ in (select uo.orgid from SYS_USER_POS uo  where uo.userid= #{userId} )
		
		UNION
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_CONTRACT_CANCEL_APPLICATION A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ 
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		AND D.type_ = 'role' and D.group_id_ in (select ur.roleid from sys_user_role ur where ur.userid=#{userId} )
		
		union 
		
		SELECT <include refid="wfColumns"/>,
		C.ID_ TASK_ID,C.TASK_DEF_KEY_,B.RUNID FLOW_RUNID,C.PROC_INST_ID_,
		C.NAME_ NODE_NAME_,C.CREATE_TIME_ TASK_CREATE_TIME_
		FROM W_CONTRACT_CANCEL_APPLICATION A,BPM_PRO_RUN B ,
		ACT_RU_TASK C,
		ACT_RU_IDENTITYLINK D
		WHERE A.ID=B.BUSINESSKEY_NUM AND B.ACTINSTID=C.PROC_INST_ID_ 
		AND C.id_ = D.TASK_ID_ 
		AND C.ASSIGNEE_ =0 and C.DESCRIPTION_!='39' 
		AND D.type_ = 'pos' and D.group_id_ in (select up.posid from sys_user_pos up where up.userid= #{userId} )
		
		) tmp
		
		<where>
			<if test="@Ognl@isNotEmpty(subject)"> AND upper(tmp.subject) LIKE #{subject}   </if>
			<if test="@Ognl@isNotEmpty(processName)"> AND upper(tmp.processName) LIKE #{processName} </if>
			<if test="@Ognl@isNotEmpty(creatorId)">AND tmp.creatorId =#{creatorId} </if>
			<if test="@Ognl@isNotEmpty(beginCreateTime)">and tmp.TASK_CREATE_TIME_>=#{beginCreateTime,jdbcType=TIMESTAMP}</if>
			<if test="@Ognl@isNotEmpty(endCreateTime)">and tmp.TASK_CREATE_TIME_ &lt;=#{endCreateTime,jdbcType=TIMESTAMP}</if>
			<if test="@Ognl@isNotEmpty(type)">
				AND tmp.description_ = #{type}
			</if>	
			
		</where>
		<if test="@Ognl@isEmpty(orderField)">
			order by tmp.TASK_CREATE_TIME_ desc
		</if>
		<if test="@Ognl@isNotEmpty(orderField)">
			order by ${orderField} ${orderSeq}
		</if>
	</select>
	
	
	<select id="getEndByUser" resultMap="ContractCancelApplication">
		SELECT <include refid="wfColumns"/>  ,B.runId
		FROM W_CONTRACT_CANCEL_APPLICATION A,BPM_PRO_RUN_HIS B
		WHERE A.ID=B.BUSINESSKEY_NUM 
		and B.CREATORID=#{userId} and B.STATUS=2
		order by B.ENDTIME DESC
	</select>
	
</mapper>
